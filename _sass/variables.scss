// VARIABLES
// Surface colours
$surface: #1c1b1f;
$surface-1: #25232a;
$surface-2: #2a2831;
$surface-3: #302d38;
$surface-4: #322e3a;
$surface-5: #35323e;

$on-surface: #e6e1e5;



// Variant colours
$surface-variant: #49454f;
$on-surface-variant: #cac4d0;
$outline: #938f99;
$outline-variant: #49454f;



// Themed colours
$primary: #d0bcff;
$on-primary: #381e72;
$primary-container: #4f378b;
$on-primary-container: #eaddff;

$secondary: #ccc2dc;
$on-secondary: #332d41;
$secondary-container: #4a4458;
$on-secondary-container: #e8def8;

$tertiary: #efb8c8;
$on-tertiary: #492532;
$tertiary-container: #633b48;
$on-tertiary-container: #ffd8e4;

$error: #f2b8b5;
$on-error: #601410;
$error-container: #8c1d18;
$on-error-container: #f9dedc;



// State layer opacities
$state-disabled-bg: 12%;
$state-disabled-fg: 38%;
$state-hovered: 8%;
$state-focused: 12%;
$state-pressed: 12%;
$state-dragged: 16%;



// Font sizes
$display-large: 57px;
$display-medium: 45px;
$display-small: 36px;

$headline-large: 32px;
$headline-medium: 28px;
$headline-small: 24px;

$title-large: 22px;
$title-medium: 16px;
$title-small: 14px;

$label-large: 14px;
$label-medium: 12px;
$label-small: 11px;

$body-large: 16px;
$body-medium: 14px;
$body-small: 12px;



// Font weights (it's all Roboto)
$display-font: 475;
$headline-font: 400;
$title-font: 500;
$label-font: 500;
$body-font: 400;



// This isn't Material 3, it's just here for conveniance
$margin: 32px;
$navigation-width: 80px;
$shadow: 0px 1px 5px 1px rgba(0, 0, 0, 0.3);
$shadow-1: 0px 4px 4px 2px rgba(0, 0, 0, 0.3);



// ========== MIXINS & FUNCTIONS ==========
// Round corners without showing the border
@mixin round($radius) {
    border: 0px solid;
    border-radius: $radius;
}
// Convert hex codes into an RGB value
@function hex2rgb($colour) {
    @return rgb(red($colour), green($colour), blue($colour));
}
// Build a state layer for an element
@mixin state_layer($colour, $radius, $override-position: true) {
    z-index: 0;
    
    @if $override-position {
        position: relative;
    }

    &::after {
        content: "";
        display: block;
        position: absolute;
    
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    
        opacity: 0;
        transition-duration: .4s;
        background-color: $colour;
        z-index: -1;

        @include round($radius);
    }
}
// Disabled state for components
@mixin disabled_state($fg-opacity: $state-disabled-fg, $bg-opacity: $state-disabled-bg, $colour: $on-surface) {
    &[disabled] {
        // Background colour is 12% opacity, while foreground is 38%
        // Need to use rgba to set differing opacities
        // Get RGB from on-surface
        $colour: hex2rgb($on-surface);

        // Background colour, w/ opacity
        background-color: rgba($colour, $bg-opacity);
        // Foreground colour, w/ opacity
        color: rgba($colour, $fg-opacity);
        // Remove the shadow, for elements that have it
        box-shadow: none;
    }
}
// Hovered state for components
@mixin hovered_state($opacity: $state-hovered, $hover-shadow: false) {
    &:not([disabled]):hover{
        @if $hover-shadow != false {
            box-shadow: $hover-shadow;
        }

        &::after {
            opacity: $opacity;
        }
    }
}
// Focused state for components
@mixin focused_state($opacity: $state-focused) {
    &:not([disabled]):focus::after {
        opacity: $opacity;
    }
}
// Pressed state for components
@mixin pressed_state($opacity: $state-pressed) {
    &:not([disabled]):active::after {
        opacity: $opacity;
    }
}
// Fancy pressed state animation
@keyframes pressed {
    from {width: 0px; height: 0px; left: 50%; top: 50%;}
    to {width: 100%; height: 100%; left: 0px; top: 0;}
}
// Mixin to play the fancy pressed state animation
@mixin fancy_pressed_state() {
    &:not([disabled]):active::after {
        opacity: $state-pressed;
        animation-name: pressed;
        animation-duration: .6s;
        animation-fill-mode: forwards;
    }
}
